{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","categos","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE7B,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBE,OAEE,sBAAMC,SAfW,SAACC,GAEtBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAO,OAAKP,GAAL,mBAAoBO,OACzCN,EAAc,MASZ,SACE,uBAAOO,KAAO,OAAOC,MAAST,EAC9BU,SAtBoB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,+BCNZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAWH,GAF5C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACPC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVb,kBAgBfM,GAhBe,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGtC,OACE,sBAAKc,UAAY,6CAAjB,UAEE,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QCLGO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEzB,ECH4B,SAACA,GAE7B,MAA0Bd,mBAAS,CAEnCqB,KAAM,GACNa,SAAS,IAHT,mBAAOC,EAAP,KAAcC,EAAd,KAiCA,OA1BAC,qBAAW,WAETxB,EAAQC,GACPwB,MAAO,SAAAC,GAEJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SASd,CAACpB,IAUGqB,EDhCiBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEX,OACE,qCACA,qBAAIJ,UAAY,oCAAhB,cAAsDhB,KAEtDoB,EAAU,wCAAiB,KAE3B,qBAAKJ,UAAY,YAAjB,SAGMT,EAAKE,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEdRgB,EAAe,WAE5B,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQE,OACE,gCACG,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAII2C,EAAWnB,KAAK,SAAAT,GACf,OAAO,cAAC,EAAD,CAEPA,SAAYA,GADLA,Y,MCtBnB6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.140380f0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\nconst [inputvalue, setinputvalue] = useState()\r\n\r\nconst handleInputChange = (e) =>{\r\n  \r\n  setinputvalue(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n\r\ne.preventDefault()\r\n\r\nif (inputvalue.trim().length > 0){\r\n  setCategorias(categos => [inputvalue, ...categos]);\r\n  setinputvalue('')\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n  return (\r\n   \r\n    <form onSubmit = {handleSubmit}>\r\n      <input type = 'text' value = {inputvalue}\r\n      onChange = {handleInputChange} />\r\n      </form>\r\n    \r\n  )\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=ybGbR6FEsx9qmfBAS2ukg0WRoe9FvWVK`\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n  \r\n  const gifs = data.map(img => {\r\n  return {\r\n  id: img.id,\r\n  title: img.title,\r\n  url: img.images?.downsized_medium.url\r\n  \r\n  }\r\n  \r\n  })\r\n  \r\n return gifs;\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n\r\n  return (\r\n    <div className = 'card animate__animated animate__fadeInDown'>\r\n\r\n      <img src = {url} alt = {title} /> \r\n      <p>{title}</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\nconst {data, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n    <h3 className = 'animate__animated animate__fadeIn'> {category}</h3>\r\n\r\n   {loading ? <p>Loading</p> : null}\r\n\r\n    <div className = 'card-grid'>\r\n\r\n        {\r\n          data.map( img => (\r\n          <GifGridItem \r\n          key = {img.id}\r\n          {...img }\r\n           />\r\n  ))\r\n        }\r\n      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\nconst [state, setstate] = useState({\r\n\r\ndata: [],\r\nloading: true\r\n\r\n});\r\n\r\nuseEffect( () => {\r\n  \r\n  getGifs(category)\r\n  .then ( imgs => {\r\n\r\n      setstate({\r\n        data: imgs,\r\n        loading: false\r\n        \r\n            });\r\n\r\n   \r\n\r\n    \r\n  })\r\n\r\n}, [category])\r\n\r\n// setTimeout(() => {\r\n//   setstate({\r\n//   data: [1,2,3,4,5],\r\n//   loading: false\r\n\r\n//   })\r\n// }, 3000);\r\n\r\nreturn state; //{data: [], loading: true}\r\n\r\n}","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categorias, setCategorias] = useState(['Desayunos'])\r\n\r\n// const handleAdd = () => {\r\n\r\n// setCategorias([...categorias, 'Bebidas'])\r\n\r\n// }\r\n\r\n  return (\r\n    <div>\r\n       <h2>GifExpertApp</h2>\r\n       <AddCategory setCategorias = {setCategorias}/>\r\n       <hr />\r\n\r\n    \r\n       <ol>\r\n            \r\n          {\r\n\r\n           categorias.map( category => {\r\n            return <GifGrid \r\n            key = {category}\r\n            category = {category}/>\r\n\r\n           })\r\n\r\n          }\r\n\r\n\r\n       </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}